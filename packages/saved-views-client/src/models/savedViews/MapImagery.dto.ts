/*---------------------------------------------------------------------------------------------
* Copyright (c) Bentley Systems, Incorporated. All rights reserved.
* See LICENSE.md in the project root for license terms and full copyright notice.
*--------------------------------------------------------------------------------------------*/
import { RgbColorProps } from "./RgbColor.dto.js";

/**
 * JSON representation of the settings associated with a map sublayer included within a MapLayerProps.
 * A map sub layer represents a set of objects within the layer that can be controlled separately.  These
 * are produced only from map servers that produce images on demand and are not supported by tiled (cached) servers.
 */
export interface MapSubLayerProps {
  name: string;
  title?: string;
  visible?: boolean;
  id?: string | number;
  parent?: string | number;
  children?: (string | number)[];
}

/** JSON representation of properties common to both ImageMapLayerProps and ModelMapLayerProps. */
export interface CommonMapLayerProps {
  visible?: boolean;
  name: string;
  transparency?: number;
  /** True to indicate background is transparent.
   */
  transparentBackground?: boolean;
}

/** JSON representation of an ImageMapLayerSettings. */
export interface ImageMapLayerProps extends CommonMapLayerProps {
  url: string;
  formatId: string;
  subLayers?: MapSubLayerProps[];
}

/** Enumerates the types of map imagery that can be supplied by a BackgroundMapProvider. */
export enum BackgroundMapType {
  Street = 1,
  Aerial = 2,
  Hybrid = 3,
}

/** JSON representation of a BackgroundMapProvider. */
export interface BackgroundMapProviderProps {
  name?: string;
  type?: BackgroundMapType;
}

/** JSON representation of a BaseMapLayerSettings. */
export interface BaseMapLayerProps extends ImageMapLayerProps {
  provider?: BackgroundMapProviderProps;
}

/** JSON representation of a ModelMapLayerSettings. */
export interface ModelMapLayerProps extends CommonMapLayerProps {
  modelId: string;
}

/** The JSON representation of the map imagery.  Map imagery include the specification for the base layer (which was originally
 * represented by BackgroundMapProps.providerName  && BackgroundMapProps.providerData) and additional map layers.
 * In earlier versions only a background map was supported as specified by the providerName and mapType members of BackgroundMapSettings object.
 * In order to provide backward compatibility the original BackgroundMapSettings are synchronized with the MapImagerySettings base layer as long as
 * the settings are compatible.
 * The non-base map layers may represent image layers generated by tile servers or model layers that are generated by 2d projection of model geomety, typically from a model
 * that is generated from two dimensional GIS data.
 */
export interface MapImageryProps {
  backgroundBase?: BaseMapLayerProps | RgbColorProps;
  backgroundLayers?: (ImageMapLayerProps | ModelMapLayerProps)[];
  overlayLayers?: (ImageMapLayerProps | ModelMapLayerProps)[];
}
